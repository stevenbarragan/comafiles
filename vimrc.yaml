plugin:
  ayu-theme/ayu-vim: {}
  brooth/far.vim: {}
  christoomey/vim-tmux-navigator:
    before: |
      let g:tmux_navigator_save_on_switch = 2
      let g:tmux_navigator_disable_when_zoomed = 1
  danishprakash/vim-githubinator: {}
  dense-analysis/ale: {}
  editorconfig/editorconfig-vim: {}
  inside/vim-search-pulse: {}
  vim-airline/vim-airline:
    script: |
      let g:airline#extensions#ale#enabled = 1
  jeffkreeftmeijer/vim-dim: {}
  jeffkreeftmeijer/vim-numbertoggle: {}
  junegunn/vim-easy-align: {}
  liuchengxu/vim-clap:
    build: |
      cd "$(miv path clap)"
      bash install.sh
    before: |
      let g:clap_layout = {'col': '0%', 'relative': 'editor', 'row': '10%', 'width': '90%'}
      let g:clap_preview_direction = 'UD'
  luochen1990/rainbow:
    before: |
      let g:rainbow_active = 1
  machakann/vim-highlightedyank: {}
  mhinz/vim-signify: {}
  pbrisbin/vim-colors-off: {}
  preservim/nerdtree: {}
  rrethy/vim-illuminate: {}
  rstacruz/vim-closer: {}
  ruanyl/vim-gh-line: {}
  ryanoasis/vim-devicons: {}
  sheerun/vim-polyglot: {}
  terryma/vim-multiple-cursors: {}
  tiagofumo/vim-nerdtree-syntax-highlight: {}
  tpope/vim-commentary: {}
  tpope/vim-endwise: {}
  tpope/vim-fugitive: {}
  tpope/vim-sensible: {}
  zhaocai/GoldenView.Vim:
    before: |
      let g:goldenview__enable_default_mapping = 0

after: |
  set termguicolors
  set encoding=UTF-8

  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

  syntax enable

  let ayucolor="dark"   " for dark version of theme
  colorscheme ayu

  " ================ General Config ====================

  set relativenumber
  set number
  set lazyredraw          " redraw only when we need to."
  set showmatch           " highlight matching [{()}]}]"
  set noshowmode
  set nowrap

  " This makes vim act like all other editors, buffers can
  " exist in the background without being in a window.
  " http://items.sjbach.com/319/configuring-vim-right
  set hidden

  let mapleader=","

  " ================ Search ===========================

  set incsearch  " Find the next match as we type the search
  set hlsearch   " Highlight searches by default
  set ignorecase " Ignore case when searching...
  set smartcase  " ...unless we type a capital
  set foldenable " enable folding"

  " ================ Turn Off Swap Files ==============

  set noswapfile
  set nobackup
  set nowb

  " Create window splits easier
  nnoremap <silent> vv <C-w>v
  nnoremap <silent> ss <C-w>s

  "Clear current search highlight by double tapping //
  nmap <silent> // :nohlsearch<CR>

  " https://github.com/junegunn/vim-easy-align#quick-start-guide
  " Start interactive EasyAlign in visual mode (e.g. vipga)
  xmap ga <Plug>(EasyAlign)

  " Start interactive EasyAlign for a motion/text object (e.g. gaip)
  nmap ga <Plug>(EasyAlign)

  " remove if staying with vim-clap
  function! FzyCommand(choice_command, vim_command)
    try
      let output = system(a:choice_command . " | fzy ")
    catch /Vim:Interrupt/
      " Swallow errors from ^C, allow redraw! below
    endtry
    redraw!
    if v:shell_error == 0 && !empty(output)
      exec a:vim_command . ' ' . output
    endif
  endfunction

  nnoremap <leader>e :call FzyCommand("ag . --silent -l -g ''", ":e")<cr>
  nnoremap <leader>v :call FzyCommand("ag . --silent -l -g ''", ":vs")<cr>
  nnoremap <leader>s :call FzyCommand("ag . --silent -l -g ''", ":sp")<cr>

  nnoremap <leader>t :Clap files<cr>

  set timeoutlen=1000 ttimeoutlen=0  " Eliminating delays on ESC

  let NERDTreeQuitOnOpen=1
  nmap <leader>f :NERDTreeFind<cr>

  " shortcut for far.vim find
  nnoremap <silent> <Find-Shortcut>  :Farf<cr>
  vnoremap <silent> <Find-Shortcut>  :Farf<cr>

  " shortcut for far.vim replace
  nnoremap <silent> <Replace-Shortcut>  :Farr<cr>
  vnoremap <silent> <Replace-Shortcut>  :Farr<cr>

  let g:lsp_diagnostics_echo_cursor = 1
  let g:ale_completion_enabled = 1
  set omnifunc=ale#completion#OmniFunc
  let g:ale_completion_tsserver_autoimport = 1

  nnoremap <silent> ,<space> :ALEGoToDefinition<CR>
  nnoremap <silent> L :ALEGoToDefinition<CR>
  nnoremap <silent> K :ALEHover<CR>
  nnoremap <silent> H :ALEFindReferences<CR>

  " Persistent undo even after closing vim session
  set undodir=~/.vim/undo-dir
  set undofile
