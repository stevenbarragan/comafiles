plugin:
  ap/vim-css-color: {}
  brooth/far.vim: {}
  EdenEast/nightfox.nvim:
    after:
      colorscheme nightfox
  christoomey/vim-tmux-navigator:
    before: |
      let g:tmux_navigator_save_on_switch = 2
      let g:tmux_navigator_disable_when_zoomed = 1
  danishprakash/vim-githubinator: {}
  dense-analysis/ale: 
    before: |
      let g:ale_completion_enabled = 1
      set omnifunc=ale#completion#OmniFunc
      let g:ale_completion_autoimport = 1

      nnoremap <silent> ,<space> :ALEGoToDefinition<CR>
      nnoremap <silent> L :ALEGoToDefinition<CR>
      nnoremap <silent> K :ALEHover<CR>
      nnoremap <silent> H :ALEFindReferences<CR>

      let g:ale_ruby_rubocop_executable = 'bin/rubocop'
  prabirshrestha/vim-lsp: {}
  mattn/vim-lsp-settings: {}
  rhysd/vim-lsp-ale: {}
  editorconfig/editorconfig-vim: {}
  inside/vim-search-pulse: {}
  ourigen/skyline.vim:
    before: |
      " let g:skyline_ale = 1
      let g:skyline_bufnum = 0
      let g:skyline_encoding = 0
      let g:skyline_fileformat = 0
      let g:skyline_percent = 0
      let g:skyline_wordcount = 1
  jeffkreeftmeijer/vim-dim: {}
  jeffkreeftmeijer/vim-numbertoggle: {}
  junegunn/vim-easy-align: {}
  gmarmstrong/vim-muse: {}
  karamcc/vim-gemini: {}
  liuchengxu/vim-clap:
    build: |
      cd "$(miv path clap)"
      ./install.sh
  lotabout/skim: {}
  luochen1990/rainbow:
    before: |
      let g:rainbow_active = 1
  machakann/vim-highlightedyank: {}
  mikedacre/tmux-zsh-vim-titles: {}
  mhinz/vim-signify: {}
  pbrisbin/vim-colors-off: {}
  preservim/nerdtree: {}
  rrethy/vim-illuminate: {}
  rstacruz/vim-closer: {}
  ruanyl/vim-gh-line: {}
  ryanoasis/vim-devicons: {}
  sheerun/vim-polyglot: {}
  tpope/vim-rails: {}
  tiagofumo/vim-nerdtree-syntax-highlight: {}
  hashivim/vim-terraform: {}
  tpope/vim-commentary: {}
  tpope/vim-endwise: {}
  tpope/vim-fugitive: {}
  tpope/vim-sensible: {}
  zhaocai/GoldenView.Vim:
    before: |
      let g:goldenview__enable_default_mapping = 0

after: |
  set termguicolors
  set encoding=UTF-8

  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

  syntax enable

  " ================ General Config ====================

  set relativenumber
  set number
  set lazyredraw          " redraw only when we need to."
  set showmatch           " highlight matching [{()}]}]"
  set noshowmode
  set nowrap

  set autoindent expandtab tabstop=2 shiftwidth=2

  " This makes vim act like all other editors, buffers can
  " exist in the background without being in a window.
  " http://items.sjbach.com/319/configuring-vim-right
  set hidden

  let mapleader=","

  " ================ Search ===========================

  set incsearch  " Find the next match as we type the search
  set hlsearch   " Highlight searches by default
  set ignorecase " Ignore case when searching...
  set smartcase  " ...unless we type a capital
  set foldenable " enable folding"

  " ================ Turn Off Swap Files ==============

  set noswapfile
  set nobackup
  set nowb

  " Create window splits easier
  nnoremap <silent> vv <C-w>v
  nnoremap <silent> ss <C-w>s

  "Clear current search highlight by double tapping //
  nmap <silent> // :nohlsearch<CR>

  " https://github.com/junegunn/vim-easy-align#quick-start-guide
  " Start interactive EasyAlign in visual mode (e.g. vipga)
  xmap ga <Plug>(EasyAlign)

  " Start interactive EasyAlign for a motion/text object (e.g. gaip)
  nmap ga <Plug>(EasyAlign)

  nnoremap <leader>t :Clap files<cr>
  nnoremap <leader>s :Clap grep<cr>

  set timeoutlen=1000 ttimeoutlen=0  " Eliminating delays on ESC

  let NERDTreeQuitOnOpen=1
  nmap <leader>f :NERDTreeFind<cr>

  " shortcut for far.vim find
  nnoremap <silent> <Find-Shortcut>  :Farf<cr>
  vnoremap <silent> <Find-Shortcut>  :Farf<cr>

  " shortcut for far.vim replace
  nnoremap <silent> <Replace-Shortcut>  :Farr<cr>
  vnoremap <silent> <Replace-Shortcut>  :Farr<cr>

  " Persistent undo even after closing vim session
  set undodir=~/.vim/undo-dir
  set undofile
